(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2266],{3905:function(e,t,o){"use strict";o.d(t,{Zo:function(){return l},kt:function(){return p}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=n.createContext({}),m=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},l=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=m(o),p=r,f=d["".concat(c,".").concat(p)]||d[p]||u[p]||s;return o?n.createElement(f,a(a({ref:t},l),{},{components:o})):n.createElement(f,a({ref:t},l))}));function p(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=o.length,a=new Array(s);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var m=2;m<s;m++)a[m]=o[m];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},6419:function(e,t,o){"use strict";o.r(t),o.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return m},toc:function(){return l},default:function(){return d}});var n=o(2122),r=o(9756),s=(o(7294),o(3905)),a=["components"],i={sidebar_position:2},c="Basics of Cosmos SDK and CosmWasm",m={unversionedId:"basics/cosmos-sdk-cw",id:"basics/cosmos-sdk-cw",isDocsHomePage:!1,title:"Basics of Cosmos SDK and CosmWasm",description:"Cosmos SDK",source:"@site/i18n/fr/docusaurus-plugin-content-docs-dev-academy/current/basics/03-cosmos-sdk-cw.md",sourceDirName:"basics",slug:"/basics/cosmos-sdk-cw",permalink:"/fr/dev-academy/basics/cosmos-sdk-cw",editUrl:"https://crowdin.com/project/cosmwasm-docs/fr",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"devAcademy",previous:{title:"Blockchain Infrastructure",permalink:"/fr/dev-academy/basics/infra"},next:{title:"Environment Setup",permalink:"/fr/dev-academy/basics/environment"}},l=[{value:"Cosmos SDK",id:"cosmos-sdk",children:[]},{value:"Differences?",id:"differences",children:[]}],u={toc:l};function d(e){var t=e.components,o=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"basics-of-cosmos-sdk-and-cosmwasm"},"Basics of Cosmos SDK and CosmWasm"),(0,s.kt)("h2",{id:"cosmos-sdk"},"Cosmos SDK"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"From ",(0,s.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/v0.43/intro/overview.html"},"Cosmos SDK docs"))),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"What is the SDK? The Cosmos-SDK is an open-source framework for building multi-asset public Proof-of-Stake (PoS) blockchains, like the Cosmos Hub, as well as permissioned Proof-Of-Authority (PoA) blockchains. Blockchains built with the Cosmos SDK are generally referred to as application-specific blockchains. The goal of the Cosmos SDK is to allow developers to easily create custom blockchains from scratch that can natively interoperate with other blockchains. We envision the SDK as the npm-like framework to build secure blockchain applications on top of Tendermint (opens new window). SDK-based blockchains are built out of composable modules, most of which are open source and readily available for any developers to use. Anyone can create a module for the Cosmos-SDK, and integrating already-built modules is as simple as importing them into your blockchain application. What's more, the Cosmos SDK is a capabilities-based system, which allows developers to better reason about the security of interactions between modules. :::")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"In short, Cosmos SDK is an easy-to-use blockchain framework that enables business to develop quickly without delving into blockchain details."),(0,s.kt)("p",{parentName:"div"},"Please read through Cosmos SDK overview documentation:"),(0,s.kt)("ul",{parentName:"div"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/v0.43/intro"},"Cosmos SDK Intro")," gives a great introduction to the framework."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/v0.43/basics"},"Cosmos SDK Basics")," covers basic concepts of cosmos sdk that is required for developing on cosmwasm without much cosmos-sdk knowledge.")),(0,s.kt)("h2",{parentName:"div",id:"cosmwasm"},"CosmWasm"))),(0,s.kt)("p",null,"In short, CosmWasm is a smart contract module that can be used with Cosmos SDK. For now it supports smart contracts written in Rust."),(0,s.kt)("h2",{id:"differences"},"Differences?"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Cosmos SDK is the underlying native application, modules are developed using go."),(0,s.kt)("li",{parentName:"ul"},"CosmWasm is an engine running on Cosmos SDK. Smart contracts are in rust for now."),(0,s.kt)("li",{parentName:"ul"},"Cosmos SDK native modules are slightly faster compare to smart contracts."),(0,s.kt)("li",{parentName:"ul"},"Smart contracts can be swapped when chain is running, on the other hand for making changes to native modules chain restarts required. This process done by validators coordinating on a restart procedure.")))}d.isMDXComponent=!0}}]);